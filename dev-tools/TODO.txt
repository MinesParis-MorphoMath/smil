
* Document distance functions (Morpho/include/private/DMorphoDistance.hpp)

* Check some wrong doxygen tags (everywhere in source code)

* maxtree (use histogram to allocate right structures size)

* some functions work only on 2D images (e.g., areaOpen, ...)
  voir avec Bea

* it seems that there are a memory leak problem at watershed function
  Saw in huge images : 2000 x 2000 x 2000 (8 Gb)

* python online documentation

* Dans CMAKE/CPack
  * ajouter possibles dependances par packet

* Correct tests :
  1 - test_global (Failed)
      Segmentation fault : sometimes
  2 - test_globalMB (Failed)
      Segmentation fault : sometimes
  8 - Base_test_draw (Failed)
      font path problem

* StochasticWS
  Needs   -std=c++11

* Doc Addons

* Find a better name for Chabardes Addon

* QVtkViewer : file smilQVtkViewer.i  OK !
  Solve problem when checking getPixel attribute
  Doesn't work because getPixel is defined as an inline method.
  * Temporary check disabled - replace getPixel by another attribute
  * Possible solution : use getPixels

* Advanced DMorphoPathOpening.h
  Lacking doxygen documentation in the end of file

* Put Advanced and Addons in a namespace other than smilPython

* Dans les tests :
  * Morpho/include/private/DMorphoDistance.hpp
    * distEuclidean
    * distV0

* In Advanced : GLSZM
  * Shall change int to long to support images bigger than 2 Gpixels 
    (common in 3D images)

* Add Smoothing in Deriche filter

* Verify Portage of Gabor filters (not coherent avec what comes from Morph-M)
  * not all where ported :
    RES_C ComputeGaborFilterConvolution(T1 *bufferIn, int W, int H,
    RES_C t_ImGaborFilterConvolution(const Image<T1> &imIn, double sigma,
    RES_C t_ImGaborFilterConvolutionNorm(const Image<T1> &imIn, double sigma,
    RES_C t_ImGaborFilterConvolutionNormAuto(const Image<T1> &imIn, double sigma,
    RES_C t_createGaborKernel(Image<T1> &imOut, double sigma, double theta,
    RES_C t_ImDisplayKernel(const Image<T1> &imIn, Image<T2> &imOut)
    RES_C t_ImNormalized(const Image<T1> &imIn, double Max, Image<T2> &imOut)

* Verify on FastBilateralFilter 
  * ImFastBilateralFilterRGB - not ported

