/**
 * @page p540 Documentation (Doxygen)
 *
 * @section s540_01 Generalities
 *
 * @section s540_02 Doxygen
 *
 * @subsection s540_02_01 Function documentation
 *
 * All functions shall be documented with a header like the following. Some
 * parts may be missing if not necessary.
 *
 * @verbatim
      /**
       * imageBeautifier() - Image Beautifier
       *
       * Image Beautifier based on the algorithm described by John Beautiful
       *
       * @note
       *  This is a note about imageBeautifier()
       *
       * @warning
       *  This is a warning about imageBeautifier()
       *
       * @see
       *  Some bibliographic reference about imageBeautifier()
       *
       * @param[in]  imgIn : Input image
       * @param[out] imgOut : Image beautified
       * @returns Some result or error code
       */
  @endverbatim
 *
 * @subsection s540_02_02 Doxygen / clang-format Oddities
 *
 *  - Use <b><code>"@tag"</code></b> syntax instead of
 * <b><code>"\tag"</code></b> : @txttype{clang-format} doesn't handle these two
 * constructions the same way and, sometimes, may break the structure. It seems
 * that using <b><code>"@tag"</code></b> gives more predictable results. Still
 * better, remember : be coherent and do the same thing the same way all the
 * time.
 *
 *  - for the same reason, always insert a blank comment line between two blocks
 * of doxygen documentation. This will prevent some @txttype{Doxygen} oddities.
 *
 *  - @txttype{clang-format} has problems when handling comments in the same 
 * line than code. So, avoid things like this :
 *
 *    - avoid this
 @verbatim
        if (x > 0 && x < width) {  // Check if inside the image
 @endverbatim
 *    - this is OK
 @verbatim
        // Check if inside the image
        if (x > 0 && x < width) {
 @endverbatim 
 *    - this is OK too
 @verbatim
        if (x > 0 && x < width) {
          // Yes, x is inside the image
 @endverbatim 
 *
 * @tableofcontents
 */
