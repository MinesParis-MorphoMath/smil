
/**
 * @page p660 Smil <-> NumPy interface
 *
 * @section s660_01 Generalities
 *
 * <a href="https://numpy.org/" target="_blank"><b>NumPy</b></a> is a
 * package for scientific computing with Python. Smil allows to
 * - access, with @b NumPy functions, the @b Smil image pixels with the method
 *   @b Image::getNumpyArray().
 *   - This is @b not a copy of the data but a real access to the image pixels
 *     via @b NumPy.
 * - create a @b Smil image from a @b NumPy array with one of the methods
 *   @TB{Image::fromNumpyArray(arr)} or @TB{Image(arr)} or @TB{NumpyInt(arr)}.
 *
 * @note These functions are available only inside @Python environnment.
 *
 * @section s660_02 Some examples
 *
 * @subsection s660_02_01 From Numpy to Smil
 *
 * - Create a @Smil image from a @Numpy array with @TB{Image()}
 * @includelineno numpy_np2image.py
 *
 * - Create a @Smil image from a @Numpy array with @TB{fromNumpyArray()}
 * @includelineno numpy_np2sp.py
 *
 *
 * @note
 *  - The content of the image is a @TB{copy} of the content of the @Numpy
 *    array;
 *  - The image size will be derived from the array shape;
 *  - for a more complex example, take a look on
 *    @TI{"how to read 3D Tiff images"}
 *    at @UrlGitHub{smilPyGoodies, smilPyGoodies/smilPyRead3D}.
 *
 * @subsection s660_02_02 From Smil to Numpy
 *
 * From a @Smil image, do some operation under @Numpy. Use @TB{getNumpyArray()}.
 *
 * @includelineno numpy_sp2np.py
 *
 * @note
 *  - the array returned by @TB{getNumpyArray()} is a pointer to the @Smil image,
 *    @TB{not a copy}.
 *
 * @subsection s660_02_03 From Smil to Numpy to Smil
 *
 * -# From a @TT{16 bits} @Smil Image, use @Numpy to convert it to @TT{8 bits}
 *  image
 * @includelineno numpy_sp2np2sp.py
 *
 * -# Use @Numpy to easily create a @Smil image with a circle inside it.
 * @includelineno numpy_array.py
 *
 * @tableofcontents
 *
 */
