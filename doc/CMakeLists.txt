
FIND_PACKAGE(Doxygen REQUIRED)

SET(DOXYGEN_CONFIG_FILE SmilDoxyfile.in)
SET(DOXY_INPUT_DIRS ${SMIL_SRC_DIRS})


IF(DOXYGEN_FOUND AND DOXYGEN_CONFIG_FILE)

     MARK_AS_ADVANCED(DOXYGEN_CONFIG_FILE)

     ###### GENERAL ######
     SET(DOXY_CONFIG_FILE ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile)
     SET(DOXY_OUTPUT_DIR  ${CMAKE_CURRENT_BINARY_DIR})
     SET(DOXY_STRIP_FROM_PATH ${CMAKE_CURRENT_SOURCE_DIR})
     SET(DOXY_STRIP_FROM_INC_PATH ${CMAKE_CURRENT_SOURCE_DIR})

     OPTION(DOXYGEN_SHOW_FILES "Show files in documentation" ON)
     IF(DOXY_SHOW_FILES)
	  SET(DOXY_SHOW_FILES YES)
     ELSE(DOXY_SHOW_FILES)
	  SET(DOXY_SHOW_FILES NO)
     ENDIF(DOXY_SHOW_FILES)
     
     ###### INPUT FILES ######
#      SET(DOXY_INPUT_DIRS)
     LIST(APPEND DOXY_INPUT_DIRS ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
     STRING(REGEX REPLACE ";" " \\\\ \n" DOXY_INPUT_DIRS "${DOXY_INPUT_DIRS}")

     SET(DOXY_FILES_PATTERN *.cpp   *.cc   *.h   *.hh   *.hpp *.hxx *.txt *.doxy)
     STRING(REGEX REPLACE ";" " \\\\ \n" DOXY_FILES_PATTERN "${DOXY_FILES_PATTERN}")
     
     SET(DOXYGEN_IMAGE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/images)
     STRING(REGEX REPLACE ";" " \\\\ \n" DOXYGEN_IMAGE_PATH "${DOXYGEN_IMAGE_PATH}")

     # EXAMPLES
     SET(DOXYGEN_EXAMPLE_PATH ${CMAKE_SOURCE_DIR}/doc/demos)
     STRING(REGEX REPLACE ";" " \\\\ \n" DOXYGEN_EXAMPLE_PATH "${DOXYGEN_EXAMPLE_PATH}")
     
     # ADD PYTHON DEMOS TO EXAMPLES
     FILE(GLOB PYTHON_DEMOS RELATIVE ${CMAKE_SOURCE_DIR}/doc/demos ${CMAKE_SOURCE_DIR}/doc/demos/*py)
     FILE(WRITE ${CMAKE_CURRENT_BINARY_DIR}/demos_python.txt)
     FOREACH(_DEMO ${PYTHON_DEMOS})
	  FILE(APPEND ${CMAKE_CURRENT_BINARY_DIR}/demos_python.txt "//! \\example ${_DEMO} \n")
     ENDFOREACH(_DEMO ${PYTHON_DEMOS})
     
     ###### PREPROCESSOR #####
     OPTION(DOXYGEN_ENABLE_PREPROCESSING "Evaluate C-preprocessor directives" ON)
     MARK_AS_ADVANCED(DOXYGEN_ENABLE_PREPROCESSING)
     IF(DOXYGEN_ENABLE_PREPROCESSING)
	  SET(DOXY_ENABLE_PREPROCESSING YES)
     ELSE(DOXYGEN_ENABLE_PREPROCESSING)
	  SET(DOXY_ENABLE_PREPROCESSING NO)
     ENDIF(DOXYGEN_ENABLE_PREPROCESSING)
     #GET_DIRECTORY_PROPERTY(INCLUDE_PATHS INCLUDE_DIRECTORIES)
     SET(INCLUDE_PATHS ${VTK_INCLUDE_DIRS} ${DOXY_INPUT_DIRS})
     STRING(REGEX REPLACE ";" " \\\\ \n" INCLUDE_PATHS "${INCLUDE_PATHS}")
     
     #### HTML #### 
     OPTION(DOXYGEN_GENERATE_HTML "Generate html documentation" ON)
     IF(DOXYGEN_GENERATE_HTML)
	  SET(DOXY_GENERATE_HTML YES)
     ELSE(DOXYGEN_GENERATE_HTML)
	  SET(DOXY_GENERATE_HTML NO)
     ENDIF(DOXYGEN_GENERATE_HTML)
     MARK_AS_ADVANCED(DOXYGEN_GENERATE_HTML)
     SET(DOXYGEN_HTML_HEADER "" CACHE STRING "html header file")
     MARK_AS_ADVANCED(DOXYGEN_HTML_HEADER)
     SET(DOXYGEN_HTML_FOOTER "" CACHE STRING "html footer file")
     MARK_AS_ADVANCED(DOXYGEN_HTML_FOOTER)
     SET(DOXYGEN_HTML_STYLESHEET "" CACHE STRING "html stylesheet file")
     MARK_AS_ADVANCED(DOXYGEN_HTML_STYLESHEET)

     ###### HTML HELP ######
     IF (WIN32)
		FIND_PACKAGE(HTMLHelp)
		IF(HTML_HELP_COMPILER)
			OPTION(DOXYGEN_GENERATE_HTML_HELP "Generate html-help documentation" ON)
			IF(DOXYGEN_GENERATE_HTML_HELP)
				SET(DOXY_GENERATE_HTMLHELP YES)
				SET(DOXY_CHM_FILE ${DOXY_OUTPUT_DIR}/${PROJECT_NAME}.chm)
				STRING(REGEX REPLACE "[/]" "\\\\" DOXY_CHM_FILE ${DOXY_CHM_FILE})
			ENDIF(DOXYGEN_GENERATE_HTML_HELP)
		ENDIF(HTML_HELP_COMPILER)
     ENDIF (WIN32)


     #### LATEX #### 
     OPTION(DOXYGEN_GENERATE_LATEX "Generate LateX documentation" OFF)
     IF(DOXYGEN_GENERATE_LATEX)
	  SET(DOXY_GENERATE_LATEX YES)
	  FIND_PACKAGE(LATEX REQUIRED)
     ELSE(DOXYGEN_GENERATE_LATEX)
	  SET(DOXY_GENERATE_LATEX NO)
	  # we need latex for doxygen because of the formulas
	  FIND_PACKAGE(LATEX)
     ENDIF(DOXYGEN_GENERATE_LATEX)
     MARK_AS_ADVANCED(DOXYGEN_GENERATE_LATEX)

     #### DOT ####
     IF(DOXYGEN_DOT_FOUND)
	  SET(DOXY_HAVE_DOT YES)
     ELSE(DOXYGEN_DOT_FOUND)
	  SET(DOXY_HAVE_DOT NO)
     ENDIF(DOXYGEN_DOT_FOUND)

     ###### WARNINGS ######
     IF(CMAKE_BUILD_TOOL MATCHES "(msdev|devenv)")
	  SET(DOXY_WARN_FORMAT "\"$file($line) : $text \"")
     ELSE(CMAKE_BUILD_TOOL MATCHES "(msdev|devenv)")
	  SET(DOXY_WARN_FORMAT "\"$file:$line: $text \"")
     ENDIF(CMAKE_BUILD_TOOL MATCHES "(msdev|devenv)")


     # Ajoute guillemets aux exe pour chemins avec espaces de windows...
     SET(LATEX_COMPILER \"${LATEX_COMPILER}\")
     SET(MAKEINDEX_COMPILER \"${MAKEINDEX_COMPILER}\")
     SET(HTML_HELP_COMPILER \"${HTML_HELP_COMPILER}\")

     CONFIGURE_FILE(${DOXYGEN_CONFIG_FILE} ${DOXY_CONFIG_FILE} @ONLY )
     ADD_CUSTOM_TARGET(doc ${DOXYGEN_EXECUTABLE} ${DOXY_CONFIG})
  
  
     SET(PYTHON_DOC_SRCS)
     FILE(GLOB DOXY_XML_FILES ${DOXY_OUTPUT_DIR}/xml/*.xml)
     FOREACH(_FICH ${DOXY_XML_FILES})
		STRING(REPLACE ".xml" ".i" _SWIG_FICH ${_FICH})
		ADD_CUSTOM_COMMAND(
			OUTPUT  ${_SWIG_FICH}
			COMMAND python ${CMAKE_CURRENT_SOURCE_DIR}/doxy2swig.py ${_FICH} ${_SWIG_FICH}
			WORKING_DIRECTORY ${DOXY_OUTPUT_DIR}/xml
			COMMENT "Creating ${_SWIG_FICH} file"
# 			DEPENDS doc ${_SWIG_FICH}
		)
		LIST(APPEND PYTHON_DOC_SRCS ${_SWIG_FICH})
		SET(SWIG_INTERFACE_FILES ${SWIG_INTERFACE_FILES} ${_SWIG_FICH} PARENT_SCOPE)
    ENDFOREACH(_FICH ${DOXY_XML_FILES})
    ADD_CUSTOM_TARGET(python_doc SOURCES ${PYTHON_DOC_SRCS} DEPENDS doc)

ENDIF(DOXYGEN_FOUND AND DOXYGEN_CONFIG_FILE)
